server {
    listen       8080;
    server_name  _;

    location / {
      return 404 '{ "error": { "message": "Page not found", "status": "404" }}';
    }

    location /duedate {
        charset utf-8;
        charset_types application/json;
        default_type application/json;
        lua_code_cache on;
        more_set_headers 'X-Served-By: $host';
        more_set_headers "Server: emarsys-nginx";
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        if ($request_method = GET) {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Expose-Headers' 'ETag, Link, Location';
            add_header 'X-Frame-Options' 'deny';
            add_header 'X-Content-Type-Option' '1; mode=block';
            add_header 'X-XSS-Protection' 'nosniff';
            add_header 'Referrer-Policy' 'origin-when-cross-origin, strict-origin-when-cross-origin';
            content_by_lua_file /usr/local/lib/lua/calc.lua;
        }

        if ($request_method = POST) {
           content_by_lua_block {
              ngx.exec("@error")
            }
        }

        if ($request_method = DELETE) {
           content_by_lua_block {
              ngx.exec("@error")
            }
        }

        if ($request_method = PUT) {
            content_by_lua_block {
              ngx.exec("@error")
            }
        }

        access_log /var/log/nginx/access.log main;
        error_log /var/log/nginx/error.log warn;
    }

    location @error {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header 'Access-Control-Expose-Headers' 'ETag, Link, Location';
        add_header 'X-Frame-Options' 'deny';
        add_header 'X-Content-Type-Option' '1; mode=block';
        add_header 'X-XSS-Protection' 'nosniff';
        add_header 'Referrer-Policy' 'origin-when-cross-origin, strict-origin-when-cross-origin';
        return 405 '{ "error": { "message": "Method Not Allowed", "status": "405" }}';
    }

    location /status/healthz {
      allow 127.0.0.1;
      allow 10.0.0.0/8;
      deny all;
      charset_types text/plain;
      default_type text/plain;
      echo "OK";
    }

    location /status/monitoring {
        access_log off;
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        deny all;
        stub_status on;
    }
}
